name: Build (Windows MinGW i686)

on:
  push:
    branches: ["**"]
    tags: ["v*", "v*.*", "v*.*.*"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [
          i686-pc-windows-gnu
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Install MSYS2 and MinGW-w64 i686
        if: ${{ endsWith(matrix.target, 'windows-gnu') }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          update: true
          install: >-
            mingw-w64-i686-gcc
            mingw-w64-i686-binutils

      - name: Verify MinGW toolchain
        if: ${{ endsWith(matrix.target, 'windows-gnu') }}
        shell: powershell
        run: |
          where i686-w64-mingw32-gcc
          i686-w64-mingw32-gcc --version

      - name: Build (cargo)
        shell: powershell
        env:
          CARGO_TARGET_I686_PC_WINDOWS_GNU_LINKER: i686-w64-mingw32-gcc
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package artifact
        shell: powershell
        run: |
          $bin = "target\${{ matrix.target }}\release\p2p_server.exe"
          $out = "p2p_server-${{ matrix.target }}-windows.exe"
          Copy-Item $bin $out
          Compress-Archive -Path $out -DestinationPath "p2p_server-${{ matrix.target }}-windows.zip"

      - name: Upload binary artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: p2p_server-${{ matrix.target }}-windows
          path: p2p_server-${{ matrix.target }}-windows.zip